apiVersion: v1
kind: Service
metadata:
  name: loki
  labels:
    app: loki
spec:
  selector:
    app: loki
  type: ClusterIP
  ports:
  - name: api
    port: 3100
    targetPort: api
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  serviceName: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: loki
        image: grafana/loki
        imagePullPolicy: IfNotPresent
        args:
        - -config.file=/etc/loki/config.yml
        ports:
        - name: api
          containerPort: 3100
        livenessProbe:
          httpGet:
            path: /ready
            port: api
          initialDelaySeconds: 45
        readinessProbe:
          httpGet:
            path: /ready
            port: api
          initialDelaySeconds: 45
        volumeMounts:
        - name: data
          mountPath: /data/loki
        - name: loki-config
          mountPath: /etc/loki
        resources:
          requests:
            cpu: 500m
            memory: 500Mi
          limits:
            cpu: 2
            memory: 1500Mi
      volumes:
      - name: loki-config
        configMap:
          name: loki-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      storageClassName: "local-path"
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi