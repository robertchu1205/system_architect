apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
  - name: grafana
    port: 3000
    targetPort: dashboard
    nodePort: 30000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
  serviceName: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - args:
        - --config=/etc/grafana/grafana.ini
        env:
        - name: GF_SERVER_ENABLE_GZIP
          value: "true"
        - name: GF_SNAPSHOTS_EXTERNAL_ENABLED
          value: "true"
        - name: GF_SNAPSHOTS_EXTERNAL_SNAPSHOT_URL
          value: 10.41.241.230
        image: grafana/grafana
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          name: dashboard
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: dashboard
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: dashboard
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: data
        - mountPath: /etc/grafana/grafana.ini
          name: grafana-config
          subPath: grafana.ini
      volumes:
      - configMap:
          name: grafana-config
        name: grafana-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      storageClassName: "local-path"
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi